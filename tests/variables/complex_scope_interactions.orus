// Complex scope interaction tests
// Test various combinations of scoping rules

mut global_var = 1000
mut counter = 0

print("=== Test 1: Multiple for loops with same variable names ===")
for i in 1..3:
    print("First loop i:", i)
    global_var = global_var + i

for i in 10..12:
    print("Second loop i (different scope):", i)
    global_var = global_var + i

print("After both loops, global_var:", global_var)

print("\n=== Test 2: For loop inside while loop ===")
mut while_counter = 0
while while_counter < 2:
    print("While iteration:", while_counter)
    
    for j in 1..3:
        print("  For loop j:", j)
        print("  Can access while_counter:", while_counter)
        counter = counter + j
    
    while_counter = while_counter + 1

print("After while with nested for, counter:", counter)

print("\n=== Test 3: Deep nesting with variable access ===")
level1_var = 100
for a in 1..2:
    level2_var = a * 10
    print("Level 2, a:", a, "level2_var:", level2_var)
    
    for b in 1..2:
        level3_var = b * 100
        print("  Level 3, b:", b, "level3_var:", level3_var)
        print("  Can access level2_var:", level2_var)
        print("  Can access level1_var:", level1_var)
        
        for c in 1..2:
            level4_var = c * 1000
            print("    Level 4, c:", c, "level4_var:", level4_var)
            print("    Can access all: a:", a, "b:", b, "level1_var:", level1_var)

print("=== All tests completed ===")
print("Final global_var:", global_var)
print("Final counter:", counter)
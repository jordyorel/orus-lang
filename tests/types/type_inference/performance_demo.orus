// Performance demo: Before vs After arithmetic type inference
// This file shows cleaner, faster-compiling code

// BEFORE: Explicit type annotations required (slower compilation)
// let result1: f64 = a + b
// let result2: u32 = x * y
// let result3: i64 = p - q

// AFTER: Types inferred from operands (faster compilation)

a: f64 = 3.14
b: f64 = 2.71

// Complex expressions - all types inferred automatically
sum = a + b
product = a * b
quotient = a / b
complex = (a + b) * (a - b)

print(sum)
print(product)
print(quotient)
print(complex)

// u32 arithmetic - types inferred
x = 1000u32
y = 250u32
u32_result = x + y * 2u32
print(u32_result)

// i64 arithmetic - types inferred  
p = 1000000i64
q = 500000i64
i64_result = p * 2i64 - q
print(i64_result)

// i32 arithmetic (default) - types inferred
m = 42
n = 8
i32_result = m + n * 3
print(i32_result)
// u32 boundary value tests as required by AGENTS.md
// Testing boundary conditions: 0, 1, MAX_U32, overflow conditions
// Using new Rust-like type inference (no suffix needed with type annotation)

// Test zero and basic boundaries
zero = 0u32
one = 1u32
print(zero)
print(one)

// Test maximum u32 value (using suffix for max value)
max_val = 4294967295u32  // 2^32 - 1
print(max_val)

// Test operations near boundaries
almost_max: u32 = 4294967294u32  // MAX - 1
one_val = 1u32
result1 = almost_max + one_val  // Should be MAX (inferred u32)
print(result1)

// Test arithmetic with boundary values
zero_times_max = zero * max_val  // Should be 0 (inferred u32)
one_times_max = one * max_val    // Should be MAX (inferred u32)
print(zero_times_max)
print(one_times_max)

// Test division by boundary values
max_div_one = max_val / one      // Should be MAX (inferred u32)
max_div_max = max_val / max_val  // Should be 1 (inferred u32)
print(max_div_one)
print(max_div_max)

// Test modulo with boundary values
max_mod_one = max_val % one      // Should be 0 (inferred u32)
one_mod_max = one % max_val      // Should be 1 (inferred u32)
print(max_mod_one)
print(one_mod_max)

// Test subtraction with boundaries
max_minus_one = max_val - one    // Should be MAX-1 (inferred u32)
max_minus_max = max_val - max_val // Should be 0 (inferred u32)
print(max_minus_one)
print(max_minus_max)
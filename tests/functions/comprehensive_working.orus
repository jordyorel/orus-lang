// Comprehensive working function test

// Basic arithmetic functions
fn add(a, b) -> i32:
    return a + b

fn multiply(x, y) -> i32:
    return x * y

// Function with no parameters
fn get_seven() -> i32:
    return 7

// Function that calls other functions
fn complex_calc(a, b, c) -> i32:
    sum = add(a, b)
    product = multiply(sum, c)
    return product

// Test all functions
print("Testing basic add:")
result1 = add(15, 25)
if assert_eq("comprehensive_working add", result1, 40):
    print(result1)

print("Testing multiply:")
result2 = multiply(6, 7)
if assert_eq("comprehensive_working multiply", result2, 42):
    print(result2)

print("Testing no parameters:")
result3 = get_seven()
if assert_eq("comprehensive_working get_seven", result3, 7):
    print(result3)

print("Testing function composition:")
result4 = complex_calc(3, 4, 5)
if assert_eq("comprehensive_working complex_calc", result4, 35):
    print(result4)
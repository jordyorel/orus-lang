// For loop edge case tests
print("=== For Loop Edge Case Tests ===")

// Zero iterations
print("Test 1: Zero iterations")
print("5..5 (should not iterate):")
mut count = 0
for i in 5..5:
    count = count + 1
    print(i)
print("Iterations: ")
print(count)
if assert_eq("for_edge_cases zero_iterations", count, 0):
    print("ok", "zero_iterations", count)

print("Test 2: Backwards range (should not iterate)")
print("10..5 (should not iterate):")
mut count2 = 0
for j in 10..5:
    count2 = count2 + 1
    print(j)
print("Iterations: ")
print(count2)
if assert_eq("for_edge_cases backward_iterations", count2, 0):
    print("ok", "backward_iterations", count2)

// Single iteration cases
print("Test 3: Single iterations")
print("0..=0:")
for k in 0..=0:
    print(k)

print("42..=42:")
for m in 42..=42:
    print(m)

// Large step that skips end
print("Test 4: Large step beyond range")  
print("1..5..10 (step larger than range):")
for a in 1..5..10:
    print(a)

print("1..=5..10:")
for b in 1..=5..10:
    print(b)

// Variable scope test
print("Test 5: Variable scope")
print("Loop variable should not be accessible after loop")
for x in 1..3:
    print(x)
// x should not be accessible here - this would be a compile error if tested

print("Test 6: Same variable name in different loops")
for i in 1..3:
    print(i)
for i in 10..12:  // Reusing variable name
    print(i)

print("All edge case tests completed!")
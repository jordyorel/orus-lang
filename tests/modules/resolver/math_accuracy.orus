use math

// Trigonometric coverage
assert_eq("math.sin(0.0)", math.sin(0.0), 0.0)
assert_eq("math.sin(PI / 2)", math.sin(math.PI / 2.0), 1.0)
assert_eq("math.sin(PI)", math.sin(math.PI), 1.2246467991473532e-16)
assert_eq("math.sin(-PI / 2)", math.sin(0.0 - (math.PI / 2.0)), -1.0)

assert_eq("math.cos(0.0)", math.cos(0.0), 1.0)
assert_eq("math.cos(PI / 2)", math.cos(math.PI / 2.0), 6.123233995736766e-17)
assert_eq("math.cos(PI)", math.cos(math.PI), -1.0)

// Power coverage
assert_eq("math.pow(2.0, 10.0)", math.pow(2.0, 10.0), 1024.0)
assert_eq("math.pow(5.0, 0.0)", math.pow(5.0, 0.0), 1.0)
assert_eq("math.pow(9.0, 0.5)", math.pow(9.0, 0.5), 3.0)
assert_eq("math.pow(10.0, -1.0)", math.pow(10.0, -1.0), 0.10000000000000001)

// Square root coverage
assert_eq("math.sqrt(0.0)", math.sqrt(0.0), 0.0)
assert_eq("math.sqrt(1.0)", math.sqrt(1.0), 1.0)
assert_eq("math.sqrt(2.0)", math.sqrt(2.0), 1.4142135623730951)
assert_eq("math.sqrt(81.0)", math.sqrt(81.0), 9.0)

print("math stdlib accuracy checks passed")
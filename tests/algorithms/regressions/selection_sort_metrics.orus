fn selection_sort(label, values):
    length = len(values)
    mut pass_count = 0
    mut swap_count = 0

    if length <= 1:
        print("selection_sort", label, "passes:", pass_count, "swaps:", swap_count)
        return values

    for i in 0..length:
        pass_count = pass_count + 1
        mut min_index = i
        for j in (i + 1)..length:
            if values[j] < values[min_index]:
                min_index = j
        if min_index != i:
            temp = values[i]
            values[i] = values[min_index]
            values[min_index] = temp
            swap_count = swap_count + 1

    if pass_count != length:
        print("FAIL selection_sort", label, "pass count", pass_count, "expected", length)
    else:
        print("selection_sort", label, "passes:", pass_count, "swaps:", swap_count)
    return values


numbers = [3, 1, 4, 1, 5]
expected = [1, 1, 3, 4, 5]
sorted_numbers = selection_sort("numbers", numbers)
mut ok = true
if len(sorted_numbers) != len(expected):
    ok = false
else:
    mut index = 0
    while index < len(expected):
        if sorted_numbers[index] != expected[index]:
            ok = false
        index = index + 1
if ok:
    print("selection_sort telemetry ok", sorted_numbers)
else:
    print("FAIL selection_sort telemetry", sorted_numbers, "expected", expected)

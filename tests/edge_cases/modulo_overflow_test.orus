// Overflow tests for new modulo operations
print("=== Modulo Overflow Tests ===")

// Test large number modulo operations (i32 range)
print("--- i32 Modulo Tests ---")
print("Large number % small number:")
print("2147483647 % 1000 =", 2147483647 % 1000)
print("2147483647 % 7 =", 2147483647 % 7)
print("2147483647 % 31 =", 2147483647 % 31)

print("Small number % large number:")
print("1000 % 2147483647 =", 1000 % 2147483647)
print("7 % 2147483647 =", 7 % 2147483647)

// Test with negative numbers (simulated)
print("--- Negative Number Modulo Tests ---")
print("Large positive % (negative simulation):")
print("2147483647 % (0 - 1000) =", 2147483647 % (0 - 1000))
print("2147483647 % (0 - 7) =", 2147483647 % (0 - 7))

print("(Negative simulation) % positive:")
print("(0 - 2147483647) % 1000 =", (0 - 2147483647) % 1000)
print("(0 - 2147483647) % 7 =", (0 - 2147483647) % 7)

print("(Negative simulation) % (negative simulation):")
print("(0 - 2147483647) % (0 - 1000) =", (0 - 2147483647) % (0 - 1000))
print("(0 - 2147483647) % (0 - 7) =", (0 - 2147483647) % (0 - 7))

// Test boundary conditions
print("--- Boundary Condition Tests ---")
print("i32 max - 1 modulo tests:")
print("2147483646 % 2 =", 2147483646 % 2)
print("2147483646 % 3 =", 2147483646 % 3)
print("2147483646 % 1000000 =", 2147483646 % 1000000)

print("Powers of 2 modulo tests:")
print("2147483647 % 2 =", 2147483647 % 2)
print("2147483647 % 4 =", 2147483647 % 4)
print("2147483647 % 8 =", 2147483647 % 8)
print("2147483647 % 16 =", 2147483647 % 16)

// Test large divisors
print("--- Large Divisor Tests ---")
print("1000000 % 999999 =", 1000000 % 999999)
print("1000000 % 999997 =", 1000000 % 999997)
print("1000000 % 500000 =", 1000000 % 500000)
print("1000000 % 333333 =", 1000000 % 333333)

// Test edge cases for 1 and itself
print("--- Edge Cases ---")
print("Any number % 1 should be 0:")
print("2147483647 % 1 =", 2147483647 % 1)
print("1000000 % 1 =", 1000000 % 1)
print("7 % 1 =", 7 % 1)

print("Any number % itself should be 0:")
print("2147483647 % 2147483647 =", 2147483647 % 2147483647)
print("1000000 % 1000000 =", 1000000 % 1000000)
print("7 % 7 =", 7 % 7)

// Test very large numbers (i32 only - i64 needs compiler support)
print("--- Large Number Tests (i32 only) ---")
print("Note: i64 operations need compiler support")
print("Current test uses i32 values only")
print("2147483647 % 1000000 =", 2147483647 % 1000000)
print("2147483647 % 7 =", 2147483647 % 7)
print("2147483647 % 31 =", 2147483647 % 31)

// Test expression combinations
print("--- Expression Combination Tests ---")
print("(Large number operations) % divisor:")
print("(1000000 + 1000) % 1000 =", (1000000 + 1000) % 1000)
print("(1000000 * 2) % 1000000 =", (1000000 * 2) % 1000000)
print("(1000000 + 2000000) % 999999 =", (1000000 + 2000000) % 999999)

print("")
print("=== Modulo Overflow Tests Complete ===")
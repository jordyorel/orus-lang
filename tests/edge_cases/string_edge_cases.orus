// Edge cases for string operations and formatting

// Test 1: Empty string handling
empty1 = ""
empty2 = ""
result = empty1 + empty2
print("Empty + empty:", result)
print("Empty length test:", empty1 == empty2)

// Test 2: String concatenation with different types
str1 = "Hello"
str2 = " "
str3 = "World"
str4 = "!"
full_message = str1 + str2 + str3 + str4
print("Full concatenation:", full_message)

// Test 3: String concatenation chains
chain = "a" + "b" + "c" + "d" + "e" + "f" + "g"
print("Long chain:", chain)

// Test 4: Strings with special characters
quote_str = "He said \"Hello\""
newline_str = "Line 1\nLine 2"
tab_str = "Column 1\tColumn 2"
print("Quotes:", quote_str)
print("Newlines:", newline_str)
print("Tabs:", tab_str)

// Test 5: Very long strings
long_str = "This is a very long string that contains many characters to test the string handling capabilities of the Orus programming language."
print("Long string:", long_str)

// Test 6: String comparisons
str_a = "apple"
str_b = "banana"
str_c = "apple"
print("apple == banana:", str_a == str_b)
print("apple == apple:", str_a == str_c)
print("apple != banana:", str_a != str_b)

// Test 7: Print with multiple string arguments
name = "Alice"
age_str = "25"
city = "New York"
print("Name:", name, "Age:", age_str, "City:", city)

// Test 8: String with numbers in print
count = 42
message = "Count is"
print(message, count)

// Test 9: Mixed print arguments
print("Mixed:", "string", 123, true, 45.67, "end")

// Test 10: Unicode and special characters (if supported)
unicode_test = "Testing: αβγδε"
print("Unicode:", unicode_test)

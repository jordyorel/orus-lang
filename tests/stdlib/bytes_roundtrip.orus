use std.bytes: make_bytes, slice_bytes, encode_utf8, decode_utf8

fn assert_bytes(label: string, buffer: bytes, expected: string):
    assert_eq(label + ":type", typeof(buffer), "bytes")
    assert_eq(label + ":decoded", decode_utf8(buffer), expected)

text = "hello bytes"
encoded = encode_utf8(text)
assert_eq("encoded:type", typeof(encoded), "bytes")
assert_eq("encoded:roundtrip", decode_utf8(encoded), text)

head = slice_bytes(encoded, 0 as i64, 5 as i64)
assert_bytes("head", head, "hello")

tail = slice_bytes(encoded, 6 as i64, 5 as i64)
assert_bytes("tail", tail, "bytes")

neg = slice_bytes(encoded, (-2 as i64), 2 as i64)
assert_bytes("neg", neg, "he")

empty = make_bytes(0 as i64)
assert_bytes("empty", empty, "")

clamped = slice_bytes(encoded, 0 as i64, 64 as i64)
assert_bytes("clamped", clamped, text)

zero_length = slice_bytes(encoded, 2 as i64, (-5 as i64))
assert_bytes("zero_length", zero_length, "")

// Simple Scope Analysis Test
// Tests the new closure capture analysis and dead variable elimination features

// Test 1: Basic dead variable detection
mut dead_var = 42
mut used_var = 10
print("Used variable:", used_var)

// Test 2: Variable scoping and lifetime tracking
mut outer_scope = 1
for i in 0..3:
    mut inner_scope = i * 2
    mut another_dead = 999  // Dead variable in loop
    outer_scope = outer_scope + inner_scope
    print("Loop", i, "inner:", inner_scope)

print("Final outer scope:", outer_scope)

// Test 3: Nested scopes with mixed usage patterns
mut global_counter = 0
for outer in 0..2:
    mut loop_var = outer * 5
    global_counter = global_counter + loop_var
    
    for inner in 0..2:
        mut nested_var = loop_var + inner
        mut nested_dead = 777  // Dead in nested scope
        global_counter = global_counter + nested_var
        print("Nested:", outer, inner, nested_var)

print("Final global counter:", global_counter)

// Test 4: Write-only variables (should be detected as dead)
mut write_only = 0
write_only = 5
write_only = 10
write_only = 15
// write_only is never read, only written

// Test 5: Variables with different lifetimes
mut short_lived = 1
mut long_lived = 100
for i in 0..5:
    short_lived = i  // Reset each iteration
    long_lived = long_lived + i  // Accumulates across iterations
    print("Iteration", i, "accumulated:", long_lived)

print("Analysis test completed")
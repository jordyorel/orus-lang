// Comprehensive test of all fixes implemented
print("=== COMPREHENSIVE TEST OF ALL FIXES ===")

// Test 1: Basic arithmetic (register isolation)
print("\n1. Basic Arithmetic Test:")
a = 15
b = 7
print("a =", a, ", b =", b)
print("a + b =", a + b)
print("a - b =", a - b)
print("a * b =", a * b)

// Test 2: Loop control (infinite loop fix)
print("\n2. Loop Control Test:")
print("Testing for loop (was infinite before):")
for i in 0..3:
    print("  Loop iteration:", i)
print("Loop completed successfully!")

// Test 3: Unary negation (codegen fix)
print("\n3. Unary Negation Test:")
x = 42
print("x =", x)
print("-x =", -x)
print("print(-42) =", -42)
print("Complex: (-x) * 2 =", (-x) * 2)

// Test 4: String operations and print functions
print("\n4. String and Print Test:")
name = "Orus"
print("Language:", name)
print("Multiple values:", 1, 2, 3)

// Test 5: Boolean operations
print("\n5. Boolean Operations Test:")
flag1 = true
flag2 = false
print("flag1 =", flag1, ", flag2 =", flag2)
print("flag1 and flag2 =", flag1 and flag2)
print("flag1 or flag2 =", flag1 or flag2)
print("not flag1 =", not flag1)

// Test 6: Type conversions and mixed operations
print("\n6. Type Conversion Test:")
int_val = 10
float_val = 3.14
print("int_val =", int_val, ", float_val =", float_val)
print("Mixed arithmetic:", int_val, "+", float_val, "=", int_val + float_val)

// Test 7: Nested operations (register corruption test)
print("\n7. Nested Operations Test:")
result = (a + b) * (a - b)
print("(a + b) * (a - b) =", result)
complex_result = ((a * 2) + (b * 3)) - ((-a) + (-b))
print("Complex nested:", complex_result)

print("\n=== ALL TESTS COMPLETED SUCCESSFULLY ===")
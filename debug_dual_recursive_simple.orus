fn test_dual(n) -> i32:
    print("=== test_dual(", n, ") START ===")
    
    if n <= 0:
        print("Base case: returning", n)
        return n
    
    print("Making FIRST recursive call to test_dual(", n-1, ")")
    left = test_dual(n - 1)
    print("FIRST call returned: left =", left)
    
    print("Making SECOND recursive call to test_dual(", n-1, ")")  
    right = test_dual(n - 1)
    print("SECOND call returned: right =", right)
    
    print("Before addition: left =", left, ", right =", right)
    result = left + right  
    print("After addition: result =", result)
    print("=== test_dual(", n, ") RETURNING", result, " ===")
    
    return result

x = test_dual(2)
print("Final:", x, "(should be 0)")
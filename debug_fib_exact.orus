fn fib(n) -> i32:
    print("=== fib(", n, ") START ===")
    
    if n <= 1:
        print("Base case: returning", n)
        return n
    
    print("Making FIRST call: fib(", n-1, ")")
    left = fib(n - 1)
    print("FIRST call fib(", n-1, ") returned:", left)
    
    print("Making SECOND call: fib(", n-2, ")")
    right = fib(n - 2) 
    print("SECOND call fib(", n-2, ") returned:", right)
    
    print("CRITICAL: left =", left, ", right =", right)
    result = left + right
    print("CRITICAL: left + right =", result)
    print("=== fib(", n, ") RETURNING", result, " ===")
    
    return result

print("Testing fib(4):")
x = fib(4)
print("fib(4) =", x, "(should be 3)")
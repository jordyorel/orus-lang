fn fib(n) -> i32:
    print("=== fib(", n, ") START ===")
    if n <= 1:
        print("BASE CASE: returning", n)
        return n
    
    print("COMPUTING: fib(", n-1, ") + fib(", n-2, ")")
    
    print("CALLING fib(", n-1, ")")
    left = fib(n - 1)
    print("RETURNED from fib(", n-1, ") = ", left)
    
    print("CALLING fib(", n-2, ")")  
    right = fib(n - 2)
    print("RETURNED from fib(", n-2, ") = ", right)
    
    print("ADDING:", left, "+", right)
    result = left + right
    print("SUM =", result)
    print("=== fib(", n, ") RETURNING", result, " ===")
    return result

print("Testing fib(3):")
x = fib(3)
print("FINAL: fib(3) =", x, "(should be 2)")